# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import matplotlib.pyplot as plt
import numpy as np
import shutil
import win32com.client as win32
import MessageBox
import image_rc
import sqlite3


class Ui_MainWindow(object):
    def openData(self): 
        path, filter = QtWidgets.QFileDialog.getOpenFileName(None, "Open Database", '', "Database Files (*.db)")
        if path:
            try:
                connection = sqlite3.connect(path)
                query = "SELECT * FROM elecWater"
                result = connection.execute(query)
                self.tableWidget.setRowCount(0)

                for row_number, row_data in enumerate(result):
                    self.tableWidget.insertRow(row_number)
                    for column_number, column_data in enumerate(row_data):
                        self.tableWidget.setItem(row_number, column_number, QtWidgets.QTableWidgetItem(str(column_data)))

                self.readfileText.setText("Reading File : " + path)
                connection.close()
            except Exception as e:
                MessageBox.wrongTable()
                print(e)


    def dbSaving(self):
        dated = self.dateEdit.text()
        elec_input = self.elecInput.toPlainText()
        water_input = self.waterInput.toPlainText()
        month_input = self.monthBox.currentText()

        #check input only number
        try:
            elec_input = float(elec_input)
            water_input = float(water_input)

            #ส่วน Append Database
            connection = sqlite3.connect("db/myDB.db")
            connection.cursor()
            data_insert = """INSERT INTO elecWater (Date, Electricity, Water, Month)
                             VALUES (?, ?, ?, ?)"""
            data = (dated, elec_input, water_input, month_input)
            connection.execute(data_insert, data)
            connection.commit()
            connection.close()

            self.elecInput.setPlainText("")
            self.waterInput.setPlainText("")
            self.readfileText.setText("Reading File : db/myDB.db")

            self.showData()  #นำ function showData มาทำงานต่อ

        except Exception as e:
            MessageBox.wrongInput()

    def showData(self): 
        connection = sqlite3.connect("db/myDB.db")
        query = "SELECT * FROM elecWater"
        result = connection.execute(query)
        self.tableWidget.setRowCount(0)

        for row_number, row_data in enumerate(result):
            self.tableWidget.insertRow(row_number)
            for column_number, column_data in enumerate(row_data):
                self.tableWidget.setItem(row_number, column_number, QtWidgets.QTableWidgetItem(str(column_data)))

        self.readfileText.setText("Reading File : db/myDB.db")
        connection.close()


    def exportExcel(self):
        xlApp = win32.Dispatch("Excel.Application")
        xlApp.Visible = True

        #Create a new excel workbook
        wb = xlApp.Workbooks.Add()

        #Create a new excel worksheet
        ws = wb.worksheets.add
        ws.name = "Record Data"

        rows = []
        columnheaders = []

        #Retrieve columns lable
        try:
            for j in range(self.tableWidget.model().columnCount()):
                columnheaders.append(self.tableWidget.horizontalHeaderItem(j).text())

        #Retrieve table content
            for row in range(self.tableWidget.rowCount()):
                record = []
                for col in range(self.tableWidget.columnCount()):
                    record.append(self.tableWidget.item(row, col).text())
                rows.append(record)

        #insert table content to Excel
            ws.Range(
                ws.cells(2, 1),
                ws.cells(len(rows)+1, len(columnheaders))
                ).value = rows

        #insert column labels to Excel
            ws.Range(
                ws.cells(1, 1),
                ws.cells(1, len(columnheaders))
                ).value = columnheaders

        except Exception as e:
            print (e)
            MessageBox.noData()


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(520, 400)
        MainWindow.setMinimumSize(QtCore.QSize(520, 400))
        MainWindow.setMaximumSize(QtCore.QSize(520, 400))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("image/elecImage.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(110, 10, 481, 51))
        self.label.setStyleSheet("font: 24pt \"BrowalliaUPC\";")
        self.label.setObjectName("label")
        self.monthBox = QtWidgets.QComboBox(self.centralwidget)
        self.monthBox.setGeometry(QtCore.QRect(230, 100, 131, 31))
        self.monthBox.setStyleSheet("font: 75 18pt \"BrowalliaUPC\";")
        self.monthBox.setObjectName("monthBox")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("icon/1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon1, "")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("icon/2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon2, "")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("icon/3.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon3, "")
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap("icon/4.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon4, "")
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap("icon/5.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon5, "")
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap("icon/6.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon6, "")
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap("icon/7.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon7, "")
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap("icon/8.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon8, "")
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap("icon/9.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon9, "")
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap("icon/10.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon10, "")
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap("icon/11.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon11, "")
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap("icon/12.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.monthBox.addItem(icon12, "")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(60, 90, 51, 51))
        self.label_2.setStyleSheet("font: 20pt \"BrowalliaUPC\";\n"
"text-decoration: underline;")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(60, 140, 51, 51))
        self.label_3.setStyleSheet("font: 20pt \"BrowalliaUPC\";\n"
"text-decoration: underline;")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(0, -20, 121, 101))
        self.label_4.setStyleSheet("image: url(:/newPrefix/image/imageMoney.png);")
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(230, 80, 81, 21))
        self.label_5.setStyleSheet("font: 18pt \"BrowalliaUPC\";")
        self.label_5.setObjectName("label_5")
        self.elecInput = QtWidgets.QTextEdit(self.centralwidget)
        self.elecInput.setGeometry(QtCore.QRect(110, 90, 111, 41))
        self.elecInput.setStyleSheet("font: 18pt \"BrowalliaUPC\";")
        self.elecInput.setObjectName("elecInput")
        self.waterInput = QtWidgets.QTextEdit(self.centralwidget)
        self.waterInput.setGeometry(QtCore.QRect(110, 140, 111, 41))
        self.waterInput.setStyleSheet("font: 18pt \"BrowalliaUPC\";")
        self.waterInput.setObjectName("waterInput")
        self.excelButton = QtWidgets.QPushButton(self.centralwidget)
        self.excelButton.setGeometry(QtCore.QRect(370, 140, 131, 41))
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap("icon/xlsxIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.excelButton.setIcon(icon13)
        self.excelButton.setIconSize(QtCore.QSize(24, 24))
        self.excelButton.setObjectName("excelButton")
        self.graphButton = QtWidgets.QPushButton(self.centralwidget)
        self.graphButton.setGeometry(QtCore.QRect(370, 200, 131, 41))
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap("icon/chart.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.graphButton.setIcon(icon14)
        self.graphButton.setObjectName("graphButton")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(370, 70, 81, 41))
        self.label_7.setStyleSheet("font: 18pt \"BrowalliaUPC\";")
        self.label_7.setObjectName("label_7")
        self.dateEdit = QtWidgets.QDateEdit(self.centralwidget)
        self.dateEdit.setGeometry(QtCore.QRect(370, 100, 131, 31))
        self.dateEdit.setStyleSheet("font: 18pt \"BrowalliaUPC\";")
        self.dateEdit.setObjectName("dateEdit")
        self.saveButton = QtWidgets.QPushButton(self.centralwidget)
        self.saveButton.setGeometry(QtCore.QRect(230, 140, 131, 41))
        self.saveButton.setStyleSheet("")
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap("icon/SaveIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.saveButton.setIcon(icon15)
        self.saveButton.setObjectName("saveButton")
        self.label_8 = QtWidgets.QLabel(self.centralwidget)
        self.label_8.setGeometry(QtCore.QRect(-20, 90, 111, 51))
        self.label_8.setStyleSheet("image: url(:/newPrefix/image/elecImage.png);")
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        self.label_9 = QtWidgets.QLabel(self.centralwidget)
        self.label_9.setGeometry(QtCore.QRect(-30, 130, 131, 61))
        self.label_9.setStyleSheet("image: url(:/newPrefix/image/waterImage.png);")
        self.label_9.setText("")
        self.label_9.setObjectName("label_9")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(20, 200, 341, 151))
        self.tableWidget.setRowCount(4)
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(4)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(75)
        self.loadButton = QtWidgets.QPushButton(self.centralwidget)
        self.loadButton.setGeometry(QtCore.QRect(370, 250, 131, 41))
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap("icon/databaseIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.loadButton.setIcon(icon16)
        self.loadButton.setIconSize(QtCore.QSize(18, 18))
        self.loadButton.setObjectName("loadButton")
        self.deleteHistoryButton = QtWidgets.QPushButton(self.centralwidget)
        self.deleteHistoryButton.setGeometry(QtCore.QRect(370, 300, 131, 41))
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap("icon/exitIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.deleteHistoryButton.setIcon(icon17)
        self.deleteHistoryButton.setIconSize(QtCore.QSize(22, 22))
        self.deleteHistoryButton.setObjectName("deleteHistoryButton")
        self.readfileText = QtWidgets.QLabel(self.centralwidget)
        self.readfileText.setGeometry(QtCore.QRect(20, 350, 481, 16))
        self.readfileText.setObjectName("readfileText")
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(110, 50, 131, 16))
        self.label_6.setStyleSheet("font: 18pt \"BrowalliaUPC\";")
        self.label_6.setObjectName("label_6")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 520, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        MainWindow.setMenuBar(self.menubar)
        self.actionAbout = QtWidgets.QAction(MainWindow)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap("icon/AboutIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAbout.setIcon(icon18)
        self.actionAbout.setObjectName("actionAbout")
        self.actionExport_to_Exce = QtWidgets.QAction(MainWindow)
        self.actionExport_to_Exce.setIcon(icon13)
        self.actionExport_to_Exce.setObjectName("actionExport_to_Exce")
        self.actionGraph_Plot = QtWidgets.QAction(MainWindow)
        self.actionGraph_Plot.setIcon(icon14)
        self.actionGraph_Plot.setObjectName("actionGraph_Plot")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionSave = QtWidgets.QAction(MainWindow)
        self.actionSave.setIcon(icon15)
        self.actionSave.setObjectName("actionSave")
        self.actionClear = QtWidgets.QAction(MainWindow)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap("icon/ClearIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionClear.setIcon(icon19)
        self.actionClear.setObjectName("actionClear")
        self.actionRelease_Notes = QtWidgets.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap("icon/NewIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRelease_Notes.setIcon(icon20)
        self.actionRelease_Notes.setObjectName("actionRelease_Notes")
        self.actionOpen = QtWidgets.QAction(MainWindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap("icon/openIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOpen.setIcon(icon21)
        self.actionOpen.setObjectName("actionOpen")
        self.actionNew = QtWidgets.QAction(MainWindow)
        self.actionNew.setIcon(icon20)
        self.actionNew.setObjectName("actionNew")
        self.actionDel = QtWidgets.QAction(MainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap("icon/deleteIcon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionDel.setIcon(icon22)
        self.actionDel.setObjectName("actionDel")
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionSave)
        self.menuFile.addAction(self.actionExport_to_Exce)
        self.menuFile.addAction(self.actionGraph_Plot)
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionClear)
        self.menuEdit.addAction(self.actionDel)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionRelease_Notes)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #คำสั่งปุ่ม Button
        self.saveButton.clicked.connect(self.dbSaving)           #ปุ่ม Save
        self.loadButton.clicked.connect(self.showData)           #ปุ่ม Load History
        self.excelButton.clicked.connect(self.exportExcel)       #ปุ่ม Export Excel
        self.deleteHistoryButton.clicked.connect(self.clearData) #ปุ่ม Delete all History
        self.graphButton.clicked.connect(self.showChart)         #ปุ่ม Chart

        #คำสั่ง Menu
        self.actionOpen.triggered.connect(self.openData)                #เมนู Open...
        self.actionExport_to_Exce.triggered.connect(self.exportExcel)   #เมนู Export to Excel
        self.actionAbout.triggered.connect(self.showAbout)              #เมนู About
        self.actionExit.triggered.connect(self.showExit)                #เมนู Exit
        self.actionClear.triggered.connect(self.elecInput.clear)        #เมนู Clear elecInput
        self.actionClear.triggered.connect(self.waterInput.clear)       #เมนู Clear waterInput
        self.actionGraph_Plot.triggered.connect(self.showChart)         #เมนู Chart
        self.actionDel.triggered.connect(self.removeRow)                #เมนู Remove Last Rows (Undo)
        self.actionSave.triggered.connect(self.saveData)                #เมนู Backup...
        self.actionRelease_Notes.triggered.connect(self.releaseNote)      #Release Note

        #โค้ดวันที่และปฏิทิน
        self.dateEdit.setDateTime(QtCore.QDateTime.currentDateTime()) #Set Current Date
        self.dateEdit.setMaximumDate(QtCore.QDate(7999, 12, 28))
        self.dateEdit.setMaximumTime(QtCore.QTime(23, 59, 59))
        self.dateEdit.setCalendarPopup(True)
        self.dateEdit.dateChanged.connect(self.onDateChanged)

    def onDateChanged(self, qDate):
        print('{0}/{1}/{2}'.format(qDate.day(), qDate.month(), qDate.year()))
        #จบโค้ด

    def showChart(self):

        month = []
        water = []
        electricity = []

        #https://doc.qt.io/qt-5/qtablewidget.html
        #รับค่า column 1 = ELectricity
        try:
            for row in range(self.tableWidget.rowCount()):
                electricity_col = []
                electricity_col.append(self.tableWidget.item(row, 1).text())
                electricity.append(electricity_col)

            sum_electricity = sum(electricity, [])                       # ลบ nested list รวมเป็น list เดียวกัน
            result_electricity = np.array(sum_electricity, dtype=float)  #แก้ data type เป็น float

        #รับค่า column 2 = Water
            for row in range(self.tableWidget.rowCount()):
                water_col = []
                water_col.append(self.tableWidget.item(row, 2).text())   #item(int row, int column)
                water.append(water_col)

            sum_water = sum(water, [])
            result_water = np.array(sum_water, dtype=float)

        #รับค่า column 3 = Month
            for row in range(self.tableWidget.rowCount()):
                month_col = []
                month_col.append(self.tableWidget.item(row, 3).text())
                month.append(month_col)

            sum_month = sum(month, [])

        #ส่วน plot graph
            fig, ax = plt.subplots()
            ax.plot(sum_month, result_electricity, result_water)
            ax.plot(result_electricity, label = "Electricity")
            ax.plot(result_water, label = "Water")

            ax.set(xlabel="Month", ylabel="Cost (THB)",
                   title = "Water and Electricity Monthly Bills 2021")
            ax.grid() #แสดง grid

            legend = ax.legend(loc = "upper right", fontsize = "large")
            legend.get_frame()

        #label ค่าไฟ https://queirozf.com/entries/add-labels-and-text-to-matplotlib-plots-annotation-examples
            for x, y in zip(sum_month, result_electricity):
                label = "{:.2f}".format(y)
                ax.annotate(label, (x, y),
                            textcoords="offset points", #ระบุตำแหน่งสำหรับ label มาพร้อมกับ xytext
                            xytext=(0, 10), #กำหนดพิกัด label ตามแกน (x, y)
                            ha="center") #กำหนดตำแหน่ง มี left, right, center

        #label ค่าน้ำ
            for x, y in zip(sum_month, result_water):
                label = "{:.2f}".format(y)
                ax.annotate(label, (x, y),
                            textcoords="offset points",
                            xytext=(0, 10),
                            ha="center")

            plt.axis([None, None, 0, 800])  #set ขนาดแกน y
            #plt.autoscale(enable=True, axis='y', tight=None)    #Auto scale แกน Y
            plt.show()

        except Exception as e:
            MessageBox.emptyTable()
            print (e)


        #โค้ด Delete all History
    def clearData(self):
        MessageBox.clearData()
        QtCore.QTimer.singleShot(100, self.showData)   #Refresh Data every 1 sec.
        #จบโค้ด

    def showAbout(self):
        MessageBox.showAbout()

    def showExit(self):
        MessageBox.showExit()

    def removeRow(self):
        connection = sqlite3.connect("db/myDB.db")
        query = """DELETE FROM elecWater
                   WHERE Date = (SELECT Date FROM elecWater
                                 ORDER BY Date DESC
                                 LIMIT 1)"""
        connection.execute(query)
        connection.commit()
        connection.close()
        QtCore.QTimer.singleShot(100, self.showData)

        #โค้ดลบตาราง QTableWidget ที่เลือก
        #selected = self.tableWidget.currentRow()
        #self.tableWidget.removeRow(selected)

    def saveData(self):
        try:
            path = QtWidgets.QFileDialog.getSaveFileName(None, "Backup Current Table", '', "Database Files (*.db)")
            if path:
                shutil.copy("db/myDB.db", path[0])
                MessageBox.backupDB()
        except Exception as e:
            print (e)

    def releaseNote(self):  #Open Release Notes
        from releasenote import Ui_MainWindow
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self.window)
        self.window.show()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Electricity-Water Bills Montly Record v1.00"))
        self.label.setText(_translate("MainWindow", "Electricity-Water Bills Montly Record"))
        self.monthBox.setItemText(0, _translate("MainWindow", "Januray"))
        self.monthBox.setItemText(1, _translate("MainWindow", "February"))
        self.monthBox.setItemText(2, _translate("MainWindow", "March"))
        self.monthBox.setItemText(3, _translate("MainWindow", "April"))
        self.monthBox.setItemText(4, _translate("MainWindow", "May"))
        self.monthBox.setItemText(5, _translate("MainWindow", "June"))
        self.monthBox.setItemText(6, _translate("MainWindow", "July"))
        self.monthBox.setItemText(7, _translate("MainWindow", "August"))
        self.monthBox.setItemText(8, _translate("MainWindow", "September"))
        self.monthBox.setItemText(9, _translate("MainWindow", "October"))
        self.monthBox.setItemText(10, _translate("MainWindow", "November"))
        self.monthBox.setItemText(11, _translate("MainWindow", "December"))
        self.label_2.setText(_translate("MainWindow", "ค่าไฟ"))
        self.label_3.setText(_translate("MainWindow", "ค่าน้ำ"))
        self.label_5.setText(_translate("MainWindow", "ประจำเดือน"))
        self.excelButton.setText(_translate("MainWindow", "Export to Excel"))
        self.graphButton.setText(_translate("MainWindow", "  Price Chart"))
        self.label_7.setText(_translate("MainWindow", "วันที่จ่าย"))
        self.saveButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Save to default database</p></body></html>"))
        self.saveButton.setText(_translate("MainWindow", "  Save"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "วันที่จ่าย"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "ค่าไฟ"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "ค่าน้ำ"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "ประจำเดือน"))
        self.loadButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Load default database</p></body></html>"))
        self.loadButton.setText(_translate("MainWindow", "  Load History"))
        self.deleteHistoryButton.setToolTip(_translate("MainWindow", "<html><head/><body><p>Delete current table</p></body></html>"))
        self.deleteHistoryButton.setText(_translate("MainWindow", "Delete History"))
        self.readfileText.setText(_translate("MainWindow", "Reading File :"))
        self.label_6.setText(_translate("MainWindow", "Version 1.00"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionExport_to_Exce.setText(_translate("MainWindow", "Export to Excel"))
        self.actionGraph_Plot.setText(_translate("MainWindow", "Chart"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionSave.setText(_translate("MainWindow", "Backup..."))
        self.actionClear.setText(_translate("MainWindow", "Clear"))
        self.actionRelease_Notes.setText(_translate("MainWindow", "Release Notes"))
        self.actionOpen.setText(_translate("MainWindow", "Open..."))
        self.actionNew.setText(_translate("MainWindow", "New"))
        self.actionDel.setText(_translate("MainWindow", "Remove Last Row (Undo)"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())